<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 
			在Spring配置文件中配置bean时，class属性的值必须是Bean实现类的完整类名（必须带包名），
		不能是接口，不能是抽象类（除非有特殊配置），否则Spring无法使用反射创建该类的实例。 
	-->
	<!-- 配置名为person的Bean，其实现类是org.crazyit.service.Person -->
	<bean id="person" class="org.crazyit.service.Person">
		<!-- 控制调用setAxe()方法，将容器中的axe Bean作为传入参数 -->
		<!-- 该Bean一旦创建处理，Spring会立即根据property子元素在底层以反射的方式执行一次setter方法。 -->
		<property name="axe" ref="axe"/>
	</bean>
	<!-- 
			配置文件中的<bean../>元素默认以反射方式来调用该类无参数的构造器，
		Spring框架通过反射根据bean元素的class属性制定的类名创建了一个Java对象，
		并以bean元素的id属性的值为key，
		将该对象放入Spring容器中，这个对象就成为了Spring容器中的Bean。
	-->
	<!-- 配置名为axe的Bean，其实现类是org.crazyit.service.Axe -->
	<bean id="axe" class="org.crazyit.service.Axe"/>
	<!-- 配置名为win的Bean，其实现类是javax.swing.JFrame -->
	<bean id="win" class="javax.swing.JFrame"/>
	<!-- 配置名为date的Bean，其实现类是java.util.Date -->
	<bean id="data" class="java.util.Date"/>
</beans>
